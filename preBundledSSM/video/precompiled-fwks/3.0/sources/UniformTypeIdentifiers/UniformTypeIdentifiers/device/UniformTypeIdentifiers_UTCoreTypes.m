#import <objc/runtime.h>
#import "allincludes.h"
#import <NFIUtility/CallbackSupport.h>
#import <NFIUtility/PointerSupport.h>
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wformat-security"
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#pragma clang diagnostic ignored "-Wnullability-completeness"
static void addProtocols()
{
}
static void registerCFunctions(JSContext* context)
{
}
static void registerEnumConstants(JSContext* context)
{
}
static void registerGlobalConstants(JSContext* context)
{
	void* p; p = NULL;
	p = (void*) &UTTypeContent;
	if (p != NULL) context[@"UTTypeContent"] = UTTypeContent;
	p = (void*) &UTTypeVolume;
	if (p != NULL) context[@"UTTypeVolume"] = UTTypeVolume;
	p = (void*) &UTTypeSVG;
	if (p != NULL) context[@"UTTypeSVG"] = UTTypeSVG;
	p = (void*) &UTTypePNG;
	if (p != NULL) context[@"UTTypePNG"] = UTTypePNG;
	p = (void*) &UTTypeCPlusPlusSource;
	if (p != NULL) context[@"UTTypeCPlusPlusSource"] = UTTypeCPlusPlusSource;
	p = (void*) &UTTypeMIDI;
	if (p != NULL) context[@"UTTypeMIDI"] = UTTypeMIDI;
	p = (void*) &UTTypePlaylist;
	if (p != NULL) context[@"UTTypePlaylist"] = UTTypePlaylist;
	p = (void*) &UTTypeAVI;
	if (p != NULL) context[@"UTTypeAVI"] = UTTypeAVI;
	p = (void*) &UTTypeAppleProtectedMPEG4Video;
	if (p != NULL) context[@"UTTypeAppleProtectedMPEG4Video"] = UTTypeAppleProtectedMPEG4Video;
	p = (void*) &UTTypeCSource;
	if (p != NULL) context[@"UTTypeCSource"] = UTTypeCSource;
	p = (void*) &UTTypeRubyScript;
	if (p != NULL) context[@"UTTypeRubyScript"] = UTTypeRubyScript;
	p = (void*) &UTTypeWebP;
	if (p != NULL) context[@"UTTypeWebP"] = UTTypeWebP;
	p = (void*) &UTTypeAIFF;
	if (p != NULL) context[@"UTTypeAIFF"] = UTTypeAIFF;
	p = (void*) &UTTypeInternetLocation;
	if (p != NULL) context[@"UTTypeInternetLocation"] = UTTypeInternetLocation;
	p = (void*) &UTTypeShellScript;
	if (p != NULL) context[@"UTTypeShellScript"] = UTTypeShellScript;
	p = (void*) &UTTypeHTML;
	if (p != NULL) context[@"UTTypeHTML"] = UTTypeHTML;
	p = (void*) &UTTypeArchive;
	if (p != NULL) context[@"UTTypeArchive"] = UTTypeArchive;
	p = (void*) &UTTypeWAV;
	if (p != NULL) context[@"UTTypeWAV"] = UTTypeWAV;
	p = (void*) &UTTypeDirectory;
	if (p != NULL) context[@"UTTypeDirectory"] = UTTypeDirectory;
	p = (void*) &UTTypeExecutable;
	if (p != NULL) context[@"UTTypeExecutable"] = UTTypeExecutable;
	p = (void*) &UTTypeMPEG4Audio;
	if (p != NULL) context[@"UTTypeMPEG4Audio"] = UTTypeMPEG4Audio;
	p = (void*) &UTTypeLog;
	if (p != NULL) context[@"UTTypeLog"] = UTTypeLog;
	p = (void*) &UTTypeEXE;
	if (p != NULL) context[@"UTTypeEXE"] = UTTypeEXE;
	p = (void*) &UTTypeItem;
	if (p != NULL) context[@"UTTypeItem"] = UTTypeItem;
	p = (void*) &UTTypeAudiovisualContent;
	if (p != NULL) context[@"UTTypeAudiovisualContent"] = UTTypeAudiovisualContent;
	p = (void*) &UTTypeOSAScript;
	if (p != NULL) context[@"UTTypeOSAScript"] = UTTypeOSAScript;
	p = (void*) &UTTypeBinaryPropertyList;
	if (p != NULL) context[@"UTTypeBinaryPropertyList"] = UTTypeBinaryPropertyList;
	p = (void*) &UTTypeMountPoint;
	if (p != NULL) context[@"UTTypeMountPoint"] = UTTypeMountPoint;
	p = (void*) &UTTypeURL;
	if (p != NULL) context[@"UTTypeURL"] = UTTypeURL;
	p = (void*) &UTTypeJPEG;
	if (p != NULL) context[@"UTTypeJPEG"] = UTTypeJPEG;
	p = (void*) &UTTypeData;
	if (p != NULL) context[@"UTTypeData"] = UTTypeData;
	p = (void*) &UTTypeAudio;
	if (p != NULL) context[@"UTTypeAudio"] = UTTypeAudio;
	p = (void*) &UTTypeFlatRTFD;
	if (p != NULL) context[@"UTTypeFlatRTFD"] = UTTypeFlatRTFD;
	p = (void*) &UTTypeDelimitedText;
	if (p != NULL) context[@"UTTypeDelimitedText"] = UTTypeDelimitedText;
	p = (void*) &UTTypeUTF16PlainText;
	if (p != NULL) context[@"UTTypeUTF16PlainText"] = UTTypeUTF16PlainText;
	p = (void*) &UTTypeWebArchive;
	if (p != NULL) context[@"UTTypeWebArchive"] = UTTypeWebArchive;
	p = (void*) &UTTypeZIP;
	if (p != NULL) context[@"UTTypeZIP"] = UTTypeZIP;
	p = (void*) &UTTypeCommaSeparatedText;
	if (p != NULL) context[@"UTTypeCommaSeparatedText"] = UTTypeCommaSeparatedText;
	p = (void*) &UTTypeMP3;
	if (p != NULL) context[@"UTTypeMP3"] = UTTypeMP3;
	p = (void*) &UTTypeUSD;
	if (p != NULL) context[@"UTTypeUSD"] = UTTypeUSD;
	p = (void*) &UTTypeBMP;
	if (p != NULL) context[@"UTTypeBMP"] = UTTypeBMP;
	p = (void*) &UTTypeARReferenceObject;
	if (p != NULL) context[@"UTTypeARReferenceObject"] = UTTypeARReferenceObject;
	p = (void*) &UTTypeSwiftSource;
	if (p != NULL) context[@"UTTypeSwiftSource"] = UTTypeSwiftSource;
	p = (void*) &UTTypeUnixExecutable;
	if (p != NULL) context[@"UTTypeUnixExecutable"] = UTTypeUnixExecutable;
	p = (void*) &UTType3DContent;
	if (p != NULL) context[@"UTType3DContent"] = UTType3DContent;
	p = (void*) &UTTypeYAML;
	if (p != NULL) context[@"UTTypeYAML"] = UTTypeYAML;
	p = (void*) &UTTypeBZ2;
	if (p != NULL) context[@"UTTypeBZ2"] = UTTypeBZ2;
	p = (void*) &UTTypeBundle;
	if (p != NULL) context[@"UTTypeBundle"] = UTTypeBundle;
	p = (void*) &UTTypeApplicationExtension;
	if (p != NULL) context[@"UTTypeApplicationExtension"] = UTTypeApplicationExtension;
	p = (void*) &UTTypeFileURL;
	if (p != NULL) context[@"UTTypeFileURL"] = UTTypeFileURL;
	p = (void*) &UTTypeMPEG;
	if (p != NULL) context[@"UTTypeMPEG"] = UTTypeMPEG;
	p = (void*) &UTTypeDiskImage;
	if (p != NULL) context[@"UTTypeDiskImage"] = UTTypeDiskImage;
	p = (void*) &UTTypeEPUB;
	if (p != NULL) context[@"UTTypeEPUB"] = UTTypeEPUB;
	p = (void*) &UTTypeVCard;
	if (p != NULL) context[@"UTTypeVCard"] = UTTypeVCard;
	p = (void*) &UTTypeJavaScript;
	if (p != NULL) context[@"UTTypeJavaScript"] = UTTypeJavaScript;
	p = (void*) &UTTypeXMLPropertyList;
	if (p != NULL) context[@"UTTypeXMLPropertyList"] = UTTypeXMLPropertyList;
	p = (void*) &UTTypeSourceCode;
	if (p != NULL) context[@"UTTypeSourceCode"] = UTTypeSourceCode;
	p = (void*) &UTTypeText;
	if (p != NULL) context[@"UTTypeText"] = UTTypeText;
	p = (void*) &UTTypeM3UPlaylist;
	if (p != NULL) context[@"UTTypeM3UPlaylist"] = UTTypeM3UPlaylist;
	p = (void*) &UTTypePackage;
	if (p != NULL) context[@"UTTypePackage"] = UTTypePackage;
	p = (void*) &UTTypePKCS12;
	if (p != NULL) context[@"UTTypePKCS12"] = UTTypePKCS12;
	p = (void*) &UTTypeSystemPreferencesPane;
	if (p != NULL) context[@"UTTypeSystemPreferencesPane"] = UTTypeSystemPreferencesPane;
	p = (void*) &UTTypeAppleScript;
	if (p != NULL) context[@"UTTypeAppleScript"] = UTTypeAppleScript;
	p = (void*) &UTTypeTIFF;
	if (p != NULL) context[@"UTTypeTIFF"] = UTTypeTIFF;
	p = (void*) &UTTypePHPScript;
	if (p != NULL) context[@"UTTypePHPScript"] = UTTypePHPScript;
	p = (void*) &UTTypeAssemblyLanguageSource;
	if (p != NULL) context[@"UTTypeAssemblyLanguageSource"] = UTTypeAssemblyLanguageSource;
	p = (void*) &UTTypeRTF;
	if (p != NULL) context[@"UTTypeRTF"] = UTTypeRTF;
	p = (void*) &UTTypeFramework;
	if (p != NULL) context[@"UTTypeFramework"] = UTTypeFramework;
	p = (void*) &UTTypeQuickLookGenerator;
	if (p != NULL) context[@"UTTypeQuickLookGenerator"] = UTTypeQuickLookGenerator;
	p = (void*) &UTTypeMessage;
	if (p != NULL) context[@"UTTypeMessage"] = UTTypeMessage;
	p = (void*) &UTTypeSpreadsheet;
	if (p != NULL) context[@"UTTypeSpreadsheet"] = UTTypeSpreadsheet;
	p = (void*) &UTTypeURLBookmarkData;
	if (p != NULL) context[@"UTTypeURLBookmarkData"] = UTTypeURLBookmarkData;
	p = (void*) &UTTypeLivePhoto;
	if (p != NULL) context[@"UTTypeLivePhoto"] = UTTypeLivePhoto;
	p = (void*) &UTTypePlainText;
	if (p != NULL) context[@"UTTypePlainText"] = UTTypePlainText;
	p = (void*) &UTTypeRTFD;
	if (p != NULL) context[@"UTTypeRTFD"] = UTTypeRTFD;
	p = (void*) &UTTypeCalendarEvent;
	if (p != NULL) context[@"UTTypeCalendarEvent"] = UTTypeCalendarEvent;
	p = (void*) &UTTypeMPEG2Video;
	if (p != NULL) context[@"UTTypeMPEG2Video"] = UTTypeMPEG2Video;
	p = (void*) &UTTypePresentation;
	if (p != NULL) context[@"UTTypePresentation"] = UTTypePresentation;
	p = (void*) &UTTypeICO;
	if (p != NULL) context[@"UTTypeICO"] = UTTypeICO;
	p = (void*) &UTTypeDatabase;
	if (p != NULL) context[@"UTTypeDatabase"] = UTTypeDatabase;
	p = (void*) &UTTypeSceneKitScene;
	if (p != NULL) context[@"UTTypeSceneKitScene"] = UTTypeSceneKitScene;
	p = (void*) &UTTypeTabSeparatedText;
	if (p != NULL) context[@"UTTypeTabSeparatedText"] = UTTypeTabSeparatedText;
	p = (void*) &UTTypeContact;
	if (p != NULL) context[@"UTTypeContact"] = UTTypeContact;
	p = (void*) &UTTypeSpotlightImporter;
	if (p != NULL) context[@"UTTypeSpotlightImporter"] = UTTypeSpotlightImporter;
	p = (void*) &UTTypeFont;
	if (p != NULL) context[@"UTTypeFont"] = UTTypeFont;
	p = (void*) &UTTypeObjectiveCPlusPlusSource;
	if (p != NULL) context[@"UTTypeObjectiveCPlusPlusSource"] = UTTypeObjectiveCPlusPlusSource;
	p = (void*) &UTTypeUTF8PlainText;
	if (p != NULL) context[@"UTTypeUTF8PlainText"] = UTTypeUTF8PlainText;
	p = (void*) &UTTypeImage;
	if (p != NULL) context[@"UTTypeImage"] = UTTypeImage;
	p = (void*) &UTTypeCPlusPlusHeader;
	if (p != NULL) context[@"UTTypeCPlusPlusHeader"] = UTTypeCPlusPlusHeader;
	p = (void*) &UTTypeApplicationBundle;
	if (p != NULL) context[@"UTTypeApplicationBundle"] = UTTypeApplicationBundle;
	p = (void*) &UTTypeAliasFile;
	if (p != NULL) context[@"UTTypeAliasFile"] = UTTypeAliasFile;
	p = (void*) &UTTypeObjectiveCSource;
	if (p != NULL) context[@"UTTypeObjectiveCSource"] = UTTypeObjectiveCSource;
	p = (void*) &UTTypeQuickTimeMovie;
	if (p != NULL) context[@"UTTypeQuickTimeMovie"] = UTTypeQuickTimeMovie;
	p = (void*) &UTTypeInternetShortcut;
	if (p != NULL) context[@"UTTypeInternetShortcut"] = UTTypeInternetShortcut;
	p = (void*) &UTTypeUTF16ExternalPlainText;
	if (p != NULL) context[@"UTTypeUTF16ExternalPlainText"] = UTTypeUTF16ExternalPlainText;
	p = (void*) &UTTypeJSON;
	if (p != NULL) context[@"UTTypeJSON"] = UTTypeJSON;
	p = (void*) &UTTypeSymbolicLink;
	if (p != NULL) context[@"UTTypeSymbolicLink"] = UTTypeSymbolicLink;
	p = (void*) &UTTypeResolvable;
	if (p != NULL) context[@"UTTypeResolvable"] = UTTypeResolvable;
	p = (void*) &UTTypePDF;
	if (p != NULL) context[@"UTTypePDF"] = UTTypePDF;
	p = (void*) &UTTypeMPEG2TransportStream;
	if (p != NULL) context[@"UTTypeMPEG2TransportStream"] = UTTypeMPEG2TransportStream;
	p = (void*) &UTTypeScript;
	if (p != NULL) context[@"UTTypeScript"] = UTTypeScript;
	p = (void*) &UTTypeBookmark;
	if (p != NULL) context[@"UTTypeBookmark"] = UTTypeBookmark;
	p = (void*) &UTTypePluginBundle;
	if (p != NULL) context[@"UTTypePluginBundle"] = UTTypePluginBundle;
	p = (void*) &UTTypePropertyList;
	if (p != NULL) context[@"UTTypePropertyList"] = UTTypePropertyList;
	p = (void*) &UTTypeRAWImage;
	if (p != NULL) context[@"UTTypeRAWImage"] = UTTypeRAWImage;
	p = (void*) &UTTypeVideo;
	if (p != NULL) context[@"UTTypeVideo"] = UTTypeVideo;
	p = (void*) &UTTypeGIF;
	if (p != NULL) context[@"UTTypeGIF"] = UTTypeGIF;
	p = (void*) &UTTypeICNS;
	if (p != NULL) context[@"UTTypeICNS"] = UTTypeICNS;
	p = (void*) &UTTypeX509Certificate;
	if (p != NULL) context[@"UTTypeX509Certificate"] = UTTypeX509Certificate;
	p = (void*) &UTTypeXML;
	if (p != NULL) context[@"UTTypeXML"] = UTTypeXML;
	p = (void*) &UTTypeXPCService;
	if (p != NULL) context[@"UTTypeXPCService"] = UTTypeXPCService;
	p = (void*) &UTTypeToDoItem;
	if (p != NULL) context[@"UTTypeToDoItem"] = UTTypeToDoItem;
	p = (void*) &UTTypeHEIC;
	if (p != NULL) context[@"UTTypeHEIC"] = UTTypeHEIC;
	p = (void*) &UTTypePerlScript;
	if (p != NULL) context[@"UTTypePerlScript"] = UTTypePerlScript;
	p = (void*) &UTTypeMPEG4Movie;
	if (p != NULL) context[@"UTTypeMPEG4Movie"] = UTTypeMPEG4Movie;
	p = (void*) &UTTypeFolder;
	if (p != NULL) context[@"UTTypeFolder"] = UTTypeFolder;
	p = (void*) &UTTypeUTF8TabSeparatedText;
	if (p != NULL) context[@"UTTypeUTF8TabSeparatedText"] = UTTypeUTF8TabSeparatedText;
	p = (void*) &UTTypeRealityFile;
	if (p != NULL) context[@"UTTypeRealityFile"] = UTTypeRealityFile;
	p = (void*) &UTTypeOSAScriptBundle;
	if (p != NULL) context[@"UTTypeOSAScriptBundle"] = UTTypeOSAScriptBundle;
	p = (void*) &UTTypePythonScript;
	if (p != NULL) context[@"UTTypePythonScript"] = UTTypePythonScript;
	p = (void*) &UTTypeEmailMessage;
	if (p != NULL) context[@"UTTypeEmailMessage"] = UTTypeEmailMessage;
	p = (void*) &UTTypeAppleProtectedMPEG4Audio;
	if (p != NULL) context[@"UTTypeAppleProtectedMPEG4Audio"] = UTTypeAppleProtectedMPEG4Audio;
	p = (void*) &UTTypeGZIP;
	if (p != NULL) context[@"UTTypeGZIP"] = UTTypeGZIP;
	p = (void*) &UTTypeUSDZ;
	if (p != NULL) context[@"UTTypeUSDZ"] = UTTypeUSDZ;
	p = (void*) &UTTypeMovie;
	if (p != NULL) context[@"UTTypeMovie"] = UTTypeMovie;
	p = (void*) &UTTypeAppleArchive;
	if (p != NULL) context[@"UTTypeAppleArchive"] = UTTypeAppleArchive;
	p = (void*) &UTTypeHEIF;
	if (p != NULL) context[@"UTTypeHEIF"] = UTTypeHEIF;
	p = (void*) &UTTypeCompositeContent;
	if (p != NULL) context[@"UTTypeCompositeContent"] = UTTypeCompositeContent;
	p = (void*) &UTTypeApplication;
	if (p != NULL) context[@"UTTypeApplication"] = UTTypeApplication;
	p = (void*) &UTTypeCHeader;
	if (p != NULL) context[@"UTTypeCHeader"] = UTTypeCHeader;
}
void load_UniformTypeIdentifiers_UTCoreTypes_symbols(JSContext* context)
{
    addProtocols();
    registerEnumConstants(context);
    registerCFunctions(context);
    registerGlobalConstants(context);
}
#pragma clang diagnostic pop
