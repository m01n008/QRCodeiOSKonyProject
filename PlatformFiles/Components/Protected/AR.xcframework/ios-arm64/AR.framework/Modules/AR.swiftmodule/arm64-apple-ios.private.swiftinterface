// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name AR
// swift-module-flags-ignorable: -enable-bare-slash-regex
import APIComponent
@_exported import AR
import ARKit
import AVKit
import CoreComponent
import Foundation
import RealityKit
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers @available(iOS 13.0, *)
@objc open class KonyModelEntity : ObjectiveC.NSObject {
  @objc deinit
}
@available(iOS 13.0, *)
extension AR.KonyARWidget {
  @objc dynamic open func startRendering()
  @objc dynamic open func stopRendering()
  @objc dynamic open func add(config: Foundation.NSDictionary)
  @objc dynamic open func remove(modelID: Swift.String)
  @objc dynamic open func setARViewDebugOptions(option: CoreComponent.KonyARViewDebugOptions)
  @objc dynamic open func debugOptionsUpdated(withNewValue newValue: Any?, oldValue: Any?)
  @objc dynamic open func activatesCoachingOverlayAutomaticallyUpdated(withNewValue newValue: Any?, oldValue: Any?)
  @objc dynamic open func sceneConfigUpdated(withNewValue newValue: Any?, oldValue: Any?)
  @objc dynamic open func overlayUpdated(withNewValue newValue: Any?, oldValue: Any?)
  @objc dynamic open func startARImageDetection()
  @objc dynamic open func stopARImageDetection()
}
@available(iOS 11.0, *)
@objc open class KonyARWidget : CoreComponent.Widget {
  @objc override dynamic public init!(model: CoreComponent.WidgetModel!)
  @objc required dynamic public init?(coder decoder: Foundation.NSCoder)
  @objc override dynamic open func setupWidget()
  @objc override dynamic open func setWidgetViewFrame(_ frame: CoreFoundation.CGRect)
  @objc open func placeholderTextUpdated(withNewValue newValue: Any?, oldValue: Any?)
  @objc open func placeholderSkinIDUpdated(withNewValue newValue: Any?, oldValue: Any?)
  @objc open func placeholderSkin() -> CoreComponent.Skin!
  @objc open func applySkin()
  @objc override dynamic open func reloadSkins()
  @objc open func refreshView()
  @objc override dynamic open func reloadWidget()
  @objc deinit
}
@available(iOS 11.0, *)
extension AR.KonyARWidget : ARKit.ARSessionDelegate {
  @objc dynamic public func session(_ session: ARKit.ARSession, didAdd anchors: [ARKit.ARAnchor])
  @available(iOS 11.0, *)
  @objc dynamic public func session(_ session: ARKit.ARSession, didRemove anchors: [ARKit.ARAnchor])
  @available(iOS 11.0, *)
  @objc dynamic public func session(_ session: ARKit.ARSession, didUpdate anchors: [ARKit.ARAnchor])
  @available(iOS 11.0, *)
  @objc dynamic public func session(_ session: ARKit.ARSession, didUpdate frame: ARKit.ARFrame)
  @available(iOS 13.0, *)
  @objc dynamic open func saveExperience(identifier: Swift.String, completion: CoreComponent.CallBack)
  @available(iOS 13.0, *)
  @objc dynamic open func loadExperience(identifier: Swift.String, completion: CoreComponent.CallBack, modelQueryCallback: CoreComponent.CallBack)
  @available(iOS 13.0, *)
  @objc dynamic open func clearExperience(identifier: Swift.String)
}
